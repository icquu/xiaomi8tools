apt install smartmontools
smartctl -a /dev/sda
lsblk -d -o name,rota

学习的顺序：完全不懂时，看视频比较好，虽然慢，但容易跟上进度便于反复观看和理解。待到已经懂了之后，看笔记和文档效率很高，因为遗漏的只很细微的细节，而笔记常常会把细节记录的很好。

linux 进程间通信的3种高级方式及优缺点
三种方式的特点（优缺点）：
1.无名管道简单方便．但局限于单向通信的工作方式．并且只能在创建它的进程及其子孙进程之间实现管道的共享：有名管道虽然可以提供给任意关系的进程使用．但是由于其长期存在于系统之中，使用不当容易出错。
2.消息缓冲可以不再局限于父子进程．而允许任意进程通过共享消息队列来实现进程间通信．并由系统调用函数来实现消息发送和接收之间的同步．从而使得用户在使用消息缓冲进行通信时不再需要考虑同步问题．使用方便，但是信息的复制需要额外消耗CPU的时间．不适宜于信息量大或操作频繁的场合。
3.共享内存针对消息缓冲的缺点改而利用内存缓冲区直接交换信息，无须复制，快捷、信息量大是其优点。但是共享内存的通信方式是通过将共享的内存缓冲区直接附加到进程的虚拟地址空间中来实现的．因此，这些进程之间的读写操作的同步问题操作系统无法实现。必须由各进程利用其他同步工具解决。另外，由于内存实体存在于计算机系统中．所以只能由处于同一个计算机系统中的诸进程共享。不方便网络通信。

mmap是在磁盘上建立一个文件，每个进程地址空间中开辟出一块空间进行映射。而shm共享内存，每个进程最终会映射到同一块物理内存。shm保存在物理内存，这样读写的速度肯定要比磁盘要快，但是存储量不是特别大。
相对于shm来说，mmap更加简单，调用更加方便，所以这也是大家都喜欢用的原因。
另外mmap有一个好处是当机器重启，因为mmap把文件保存在磁盘上，这个文件还保存了操作系统同步的映像，所以mmap不会丢失，但是shmget在内存里面就会丢失。
总之，shm是在内存中创建空间，每个进程映射到此处。内存映射是创建一个文件，并且映射到每个进程开辟的空间中。

共享内存的方式涉及的几个函数：
shmget()创建一个共享内存段
shmat()附上共享内存段
shmdt()分离共享内存段
shmctl()销毁共享内存段

CSDN大牛:
https://blog.csdn.net/younger_china/article/details/130105471

Linux开发:
https://www.bilibili.com/video/BV1SM411x78H/?spm_id_from=333.337.search-card.all.click

DebianDebian 新维护者手册
https://www.debian.org/doc/manuals/maint-guide/index.zh-cn.html
第 1 章 正确的起点
https://www.debian.org/doc/manuals/maint-guide/start.zh-cn.html
